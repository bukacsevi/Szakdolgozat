
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.text.JTextComponent;
import newpackage.Beszállító;
import newpackage.DbKapcsolat;
import newpackage.Termék;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author kicsi
 */
public class TermekHozzaad extends javax.swing.JPanel {

    private DbKapcsolat db;

    public TermekHozzaad() {
        db = frame.getDbKapcsolat();
        initComponents();
        
        
        radioGombok.add(hozzaadRadioGomb);
        radioGombok.add(modositRadioGomb);
        radioGombok.add(torolRadioGomb);

        hozzaadRadioGomb.setSelected(true);

        termekLista.setEnabled(false);
        AutoCompleteDecorator.decorate(beszallitoLista);
        AutoCompleteDecorator.decorate(termekLista);
        termekLista.setModel(new DefaultComboBoxModel(db.getTermekek()));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioGombok = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        hozzaadRadioGomb = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        beszallitoLista = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cikkszam = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        megnevezes = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ar = new javax.swing.JTextField();
        panel1 = new javax.swing.JPanel();
        modositRadioGomb = new javax.swing.JRadioButton();
        torolRadioGomb = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        termekLista = new javax.swing.JComboBox();
        keresGomb = new javax.swing.JButton();
        keszGomb = new javax.swing.JButton();

        setBackground(new java.awt.Color(238, 238, 238));
        setPreferredSize(new java.awt.Dimension(1064, 401));

        jPanel1.setBackground(new java.awt.Color(0, 140, 113));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Termék műveletek");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(900, 900, 900))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        hozzaadRadioGomb.setBackground(new java.awt.Color(255, 255, 255));
        hozzaadRadioGomb.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        hozzaadRadioGomb.setForeground(new java.awt.Color(0, 140, 113));
        hozzaadRadioGomb.setText("Új termék hozzáadása");
        hozzaadRadioGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hozzaadRadioGombActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 140, 113));
        jLabel4.setText("Beszállító megnevezés:");

        beszallitoLista.setEditable(true);
        beszallitoLista.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        beszallitoLista.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                beszallitoListaKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 140, 113));
        jLabel1.setText("Cikkszám:");

        cikkszam.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        cikkszam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cikkszamActionPerformed(evt);
            }
        });
        cikkszam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cikkszamKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 140, 113));
        jLabel2.setText("Megnevezés");

        megnevezes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        megnevezes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                megnevezesKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 140, 113));
        jLabel3.setText("Ár:");

        ar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        ar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                arKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(beszallitoLista, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(megnevezes, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cikkszam, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(hozzaadRadioGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(hozzaadRadioGomb)
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(beszallitoLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cikkszam, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(megnevezes, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        panel1.setBackground(new java.awt.Color(255, 255, 255));
        panel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        modositRadioGomb.setBackground(new java.awt.Color(255, 255, 255));
        modositRadioGomb.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        modositRadioGomb.setForeground(new java.awt.Color(0, 140, 113));
        modositRadioGomb.setText("Termék adatmódosítás");
        modositRadioGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modositRadioGombActionPerformed(evt);
            }
        });

        torolRadioGomb.setBackground(new java.awt.Color(255, 255, 255));
        torolRadioGomb.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        torolRadioGomb.setForeground(new java.awt.Color(0, 140, 113));
        torolRadioGomb.setText("Termék törlés");
        torolRadioGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                torolRadioGombActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 140, 113));
        jLabel6.setText("Termék kiválasztása:");

        termekLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termekListaActionPerformed(evt);
            }
        });

        keresGomb.setBackground(new java.awt.Color(255, 140, 0));
        keresGomb.setForeground(new java.awt.Color(255, 255, 255));
        keresGomb.setText("FRISSÍT");
        keresGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keresGombActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(keresGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modositRadioGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(termekLista, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(torolRadioGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modositRadioGomb)
                    .addComponent(torolRadioGomb))
                .addGap(32, 32, 32)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(termekLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(keresGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        keszGomb.setBackground(new java.awt.Color(255, 140, 0));
        keszGomb.setForeground(new java.awt.Color(255, 255, 255));
        keszGomb.setText("KÉSZ");
        keszGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeszActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(keszGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(keszGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public JComboBox getBeszallitoComboBox() {
        return this.beszallitoLista;
    }

    private void cikkszamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cikkszamActionPerformed

    }//GEN-LAST:event_cikkszamActionPerformed

    private void KeszActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeszActionPerformed

        try {
            Beszállító beszallito = (Beszállító) beszallitoLista.getSelectedItem();
            String cikkszam_ = cikkszam.getText();
            String megnevezes_ = megnevezes.getText();
            int ar_;

            if (cikkszam_.equals("") || megnevezes_.equals("") || ar.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Az adatok megadása kötelező!");
                return;
            }

            try {
                int cikkszamEllenorzes = Integer.parseInt(cikkszam_);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "A cikkszám csak szám lehet!");
                return;
            }
            try {
                ar_ = Integer.parseInt(ar.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Hiba az ár megadásánál!");
                return;
            }

            Termék ujTermek = new Termék(cikkszam_, megnevezes_, ar_);

            if (hozzaadRadioGomb.isSelected()) {
                Boolean termekLetrejott = false;
                try {
                    termekLetrejott = db.ujTermek(ujTermek);                    
                } catch (Exception ex) {
                    Logger.getLogger(DbKapcsolat.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Hibás adatbevitel! Ellenőrizze létezik e már ilyen cikkszám!");
                }
                if (termekLetrejott) {       //itt kap id-t                
                    Termék termekAdatbazisbol = db.lekerdezTermek(ujTermek.getCikkszam());
                    try {
                        db.ujTermekBeszallitohozRendel(termekAdatbazisbol, beszallito); //kell a termekid
                        JOptionPane.showMessageDialog(null, "Termék hozzáadva");
                    } catch (Exception ex) {
                        Logger.getLogger(DbKapcsolat.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(null, "Hibás hozzárendelés!");
                    }
                }
                termekLista.setModel(new DefaultComboBoxModel(db.getTermekek()));

            }
            if (modositRadioGomb.isSelected()) {
                Termék modositandoTermek = (Termék) termekLista.getSelectedItem();
                int modositandoTermekId = modositandoTermek.getTermekId();

                ujTermek.setTermekId(modositandoTermekId);

                db.modositTermek(ujTermek, beszallito);

//                cikkszam.setEditable(false);
//                cikkszam.setBackground(Color.LIGHT_GRAY);
//                megnevezes.setEditable(false);
//                megnevezes.setBackground(Color.LIGHT_GRAY);
//                ar.setEditable(false);
//                ar.setBackground(Color.LIGHT_GRAY);
//                beszallitoLista.setEnabled(false);
//                termekLista.setEnabled(true);
                termekLista.setModel(new DefaultComboBoxModel(db.getTermekek()));
                keresGomb.doClick();
                System.out.println("1");

            }
            if (torolRadioGomb.isSelected()) {
                Termék torlendoTermek = (Termék) termekLista.getSelectedItem();
                db.torolTermek(torlendoTermek, beszallito);

                termekLista.setModel(new DefaultComboBoxModel(db.getTermekek()));
                keresGomb.doClick();
                System.out.println("2");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Hiba!");
        }

    }//GEN-LAST:event_KeszActionPerformed

    private void hozzaadRadioGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hozzaadRadioGombActionPerformed
        cikkszam.setEditable(true);
        cikkszam.setBackground(Color.WHITE);
        megnevezes.setEditable(true);
        megnevezes.setBackground(Color.WHITE);
        ar.setEditable(true);
        ar.setBackground(Color.WHITE);
        beszallitoLista.setEnabled(true);
        termekLista.setEnabled(false);
        cikkszam.setText("");
        megnevezes.setText("");
        ar.setText("");
    }//GEN-LAST:event_hozzaadRadioGombActionPerformed

    private void modositRadioGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modositRadioGombActionPerformed
        cikkszam.setEditable(false);
        cikkszam.setBackground(Color.LIGHT_GRAY);
        megnevezes.setEditable(false);
        megnevezes.setBackground(Color.LIGHT_GRAY);
        ar.setEditable(false);
        ar.setBackground(Color.LIGHT_GRAY);
        termekLista.setEnabled(true);
        beszallitoLista.setEnabled(false);
        cikkszam.setText("");
        megnevezes.setText("");
        ar.setText("");

        keresGomb.doClick();
        System.out.println("3");


    }//GEN-LAST:event_modositRadioGombActionPerformed

    private void keresGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keresGombActionPerformed

        if (modositRadioGomb.isSelected()) {
            try {
                Termék termek = (Termék) termekLista.getSelectedItem();
                megnevezes.setText(termek.getMegnevezes());
                ar.setText(String.valueOf(termek.getAr()));
                cikkszam.setEditable(true);
                cikkszam.setBackground(Color.WHITE);
                megnevezes.setEditable(true);
                megnevezes.setBackground(Color.WHITE);
                cikkszam.setText(termek.getCikkszam());
                ar.setEditable(true);
                ar.setBackground(Color.WHITE);
                //termekLista.setEnabled(false);
                beszallitoLista.setEnabled(true);

                int cegId = db.lekerdezTermekBeszallitoja(termek);
                beszallitoLista.setSelectedItem(db.lekerdezBeszallito(cegId));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Terméklista üres!");
            }
        }
        if (torolRadioGomb.isSelected()) {
            try {
                Termék termek = (Termék) termekLista.getSelectedItem();
                megnevezes.setText(termek.getMegnevezes());
                cikkszam.setText(termek.getCikkszam());
                ar.setText(String.valueOf(termek.getAr()));
                int cegId = db.lekerdezTermekBeszallitoja(termek);
                beszallitoLista.setSelectedItem(db.lekerdezBeszallito(cegId));

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Terméklista üres!");

                cikkszam.setText("");
                megnevezes.setText("");
                ar.setText("");
                beszallitoLista.setModel(new DefaultComboBoxModel(db.getBeszallitok()));

            }
        }
    }//GEN-LAST:event_keresGombActionPerformed

    private void torolRadioGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_torolRadioGombActionPerformed
        cikkszam.setEditable(false);
        cikkszam.setBackground(Color.LIGHT_GRAY);
        megnevezes.setEditable(false);
        megnevezes.setBackground(Color.LIGHT_GRAY);
        ar.setEditable(false);
        ar.setBackground(Color.LIGHT_GRAY);
        termekLista.setEnabled(true);
        beszallitoLista.setEnabled(false);
        cikkszam.setText("");
        megnevezes.setText("");
        ar.setText("");

        keresGomb.doClick();
        System.out.println("4");
    }//GEN-LAST:event_torolRadioGombActionPerformed

    private void cikkszamKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cikkszamKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            keszGomb.doClick();
        }

    }//GEN-LAST:event_cikkszamKeyPressed

    private void megnevezesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_megnevezesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            keszGomb.doClick();

        }
    }//GEN-LAST:event_megnevezesKeyPressed

    private void arKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            keszGomb.doClick();

        }
    }//GEN-LAST:event_arKeyPressed

    private void beszallitoListaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_beszallitoListaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            keszGomb.doClick();

        }
    }//GEN-LAST:event_beszallitoListaKeyPressed

    private void termekListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termekListaActionPerformed
        if (modositRadioGomb.isSelected() || torolRadioGomb.isSelected()) {
            keresGomb.doClick();
            System.out.println("5");
        }
    }//GEN-LAST:event_termekListaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ar;
    private javax.swing.JComboBox beszallitoLista;
    private javax.swing.JTextField cikkszam;
    private javax.swing.JRadioButton hozzaadRadioGomb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton keresGomb;
    private javax.swing.JButton keszGomb;
    private javax.swing.JTextField megnevezes;
    private javax.swing.JRadioButton modositRadioGomb;
    private javax.swing.JPanel panel1;
    private javax.swing.ButtonGroup radioGombok;
    private javax.swing.JComboBox termekLista;
    private javax.swing.JRadioButton torolRadioGomb;
    // End of variables declaration//GEN-END:variables
}
