
import java.awt.Frame;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import newpackage.DbKapcsolat;
import newpackage.Raktár;
import newpackage.Termék;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author kicsi
 */
public class Leltar extends javax.swing.JDialog {

    DbKapcsolat db;
    private Raktár kijeloltRaktar = null;
    private int kijeloltRaktarId = 0;
    private Vector<Termék> termekek;
    private JFileChooser fajlValaszto;
    private String filePath = "";
    private File file;

    public Leltar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        szoveg.setEditable(false);
        this.setLocationRelativeTo(null);
        this.setTitle("Leltár");
        db = ((frame) parent).getDbKapcsolat();
        raktarLista.setModel(new DefaultComboBoxModel(db.getRaktarak()));
        szoveg.setText("Leltár:   \n"+LocalDate.now().toString()+"\n");
        AutoCompleteDecorator.decorate(raktarLista);
        AutoCompleteDecorator.decorate(termekLista);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        raktarLista = new javax.swing.JComboBox();
        termekLista = new javax.swing.JComboBox();
        darab = new javax.swing.JTextField();
        rogzitGomb = new javax.swing.JButton();
        raktarValasztGomb = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        szoveg = new javax.swing.JTextArea();
        mentes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(238, 238, 238));

        rogzitGomb.setBackground(new java.awt.Color(255, 140, 0));
        rogzitGomb.setForeground(new java.awt.Color(255, 255, 255));
        rogzitGomb.setText("RÖGZÍT");
        rogzitGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rogzitGombActionPerformed(evt);
            }
        });

        raktarValasztGomb.setBackground(new java.awt.Color(255, 140, 0));
        raktarValasztGomb.setForeground(new java.awt.Color(255, 255, 255));
        raktarValasztGomb.setText("KIVÁLASZT");
        raktarValasztGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raktarValasztGombActionPerformed(evt);
            }
        });

        szoveg.setColumns(20);
        szoveg.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        szoveg.setRows(5);
        jScrollPane1.setViewportView(szoveg);

        mentes.setBackground(new java.awt.Color(255, 140, 0));
        mentes.setForeground(new java.awt.Color(255, 255, 255));
        mentes.setText("MENTÉS");
        mentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mentesActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 140, 113));
        jLabel1.setText("Válassza ki a raktárat:");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 140, 113));
        jLabel2.setText("Leltározott termék:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 140, 113));
        jLabel3.setText("Mennyiség:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(raktarLista, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(raktarValasztGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 68, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(termekLista, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(darab)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mentes, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rogzitGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(raktarLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(raktarValasztGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(termekLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(darab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(rogzitGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(mentes, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void raktarValasztGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raktarValasztGombActionPerformed
        kijeloltRaktar = (Raktár) raktarLista.getSelectedItem();
        kijeloltRaktarId = kijeloltRaktar.getRaktarId();

        //raktarban levő termek lista szűrése
        db.raktarTermekLista(kijeloltRaktarId);
        termekek = db.getTermekekAdottRaktarban();
        termekLista.setModel(new DefaultComboBoxModel(termekek));
        szoveg.append(kijeloltRaktar.getRaktarNev() + "\n");
        raktarLista.setEnabled(false);
        raktarValasztGomb.setEnabled(false);
    }//GEN-LAST:event_raktarValasztGombActionPerformed

    private void rogzitGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rogzitGombActionPerformed
        try {
            int leltarDb = Integer.parseInt(darab.getText());
            Termék termek = (Termék) termekLista.getSelectedItem();
            int raktarbanDarab = db.lekerdezesLeltar(kijeloltRaktarId, termek.getMegnevezes(), termek.getCikkszam());

            if (leltarDb == raktarbanDarab) {
                szoveg.append(termek.getCikkszam() + " " + termek.getMegnevezes() + " rögzítve:  " + leltarDb + " darab\n");
                termekek.remove(termek);
                termekLista.setModel(new DefaultComboBoxModel(termekek));
            } else {
                LeltarElteres elteres = new LeltarElteres((Frame) this.getParent(), true, leltarDb - raktarbanDarab);

                elteres.setVisible(true);
                if (elteres.rogzit()) {
                    szoveg.append(termek.getCikkszam() + " " + termek.getMegnevezes() + " rögzítve:  " + leltarDb + " darab     Eltérés: " + (leltarDb - raktarbanDarab) + "\n");
                    termekek.remove(termek);
                    termekLista.setModel(new DefaultComboBoxModel(termekek));
                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Hibás adatbevitel!");
        }
        darab.setText("");

    }//GEN-LAST:event_rogzitGombActionPerformed

    private void mentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mentesActionPerformed
        fajlValaszto = new JFileChooser("C:\\");
        int kivalasztva = fajlValaszto.showSaveDialog(null);

        if (kivalasztva == JFileChooser.APPROVE_OPTION) {

            file = new File(fajlValaszto.getSelectedFile() + ".txt");

            if (!file.exists()) {
                this.filePath = fajlValaszto.getSelectedFile().getPath() + ".txt";

                String leltar = szoveg.getText().replace("\n", System.lineSeparator());

                try {
                    File ujLeltar = new File(filePath);
                    FileWriter ujFajl = new FileWriter(ujLeltar);
                    ujFajl.write(leltar);
                    ujFajl.close();

                    szoveg.setText("");
                    raktarLista.setEnabled(true);
                    raktarValasztGomb.setEnabled(true);
                } catch (IOException ex) {
                    Logger.getLogger(Leltar.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ez a file már létezik!");
            }
        }
        
    }//GEN-LAST:event_mentesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Leltar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Leltar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Leltar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Leltar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Leltar dialog = new Leltar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField darab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mentes;
    private javax.swing.JComboBox raktarLista;
    private javax.swing.JButton raktarValasztGomb;
    private javax.swing.JButton rogzitGomb;
    private javax.swing.JTextArea szoveg;
    private javax.swing.JComboBox termekLista;
    // End of variables declaration//GEN-END:variables
}
